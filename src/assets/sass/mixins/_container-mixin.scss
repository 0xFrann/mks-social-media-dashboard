//  * Container mixin - Bootstrap
//
//  https://github.com/twbs/bootstrap

//  Sass Native
@use "sass:map";

//  Breakpoint viewport sizes and media queries.
//
//  Breakpoints are defined as a map of (name: minimum width), order from small to large:
//
//     (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)
//
//  The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.

//  Minimum breakpoint width. Null for the smallest (first) breakpoint.
//
//     >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//     576px
@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
  $min: map-get($breakpoints, $name);

  @return if($min != 0, $min, null);
}

//  Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.
//  Useful for making responsive utilities.
//
//     >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//     ""  (Returns a blank string)
//     >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//     "-sm"
@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {
  @return if(breakpoint-min($name, $breakpoints) == null, "", "-#{$name}");
}

//  Media of at least the minimum breakpoint width. No query for the smallest breakpoint.
//  Makes the @content apply to the given breakpoint and wider.
@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($name, $breakpoints);

  @if $min {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @content;
  }
}

//  Container mixins

@mixin make-container($padding-x: $container-padding-x) {
  width: 100%;
  padding-right: $padding-x;
  padding-left: $padding-x;
  margin-right: auto;
  margin-left: auto;
}

//  For each breakpoint, define the maximum width of the container in a media query
@mixin make-container-max-widths(
  $max-widths: $container-max-widths,
  $breakpoints: $grid-breakpoints
) {
  @each $breakpoint, $container-max-width in $max-widths {
    @include media-breakpoint-up($breakpoint, $breakpoints) {
      max-width: $container-max-width;
    }
  }
}
